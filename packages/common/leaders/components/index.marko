import { getAsArray } from "@base-cms/object-path";
import queryFragment from "../graphql/fragments/section";

$ const {
  sectionAlias: alias,
  logoSrc: src,
  logoAlt: alt,
  columns,
} = input;

<marko-web-query|{ node: leaders }| name="website-section" params={ alias, queryFragment }>
  $ const nodes = getAsArray(leaders, "children.edges").map(({ node }) => node);
  <marko-web-node-list modifiers=["leaders"]>
    <@header modifiers=["centered"]>
      <if(src)>
        <img src=src alt=alt class="leaders__logo" />
      </if>
      <if(columns > 1)>
        <div class="leaders__callout">
          <div>Browse these</div>
          <div class="leaders__suppliers-callout">leading suppliers</div>
        </div>
      </if>
    </@header>
    <@nodes nodes=nodes>
      $ const hasChildren = nodes.some(node => getAsArray(node, "children.edges").length);
      <if(hasChildren)>
        <for|parent| of=nodes>
          <label class="leaders__category leaders__category--bottom-border">${parent.name}</label>
          $ const children = getAsArray(parent, "children.edges").map(({ node: item }) => item);
          <leaders-column-layout columns=columns nodes=children />
        </for>
      </if>
      <else>
        <leaders-column-layout columns=columns nodes=nodes />
      </else>
    </@nodes>
  </marko-web-node-list>
</marko-web-query>
