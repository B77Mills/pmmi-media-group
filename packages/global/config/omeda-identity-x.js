module.exports = ({
  omedaConfig,
  idxConfig,
  rapidIdentProductId,
  websiteBehaviorAttributeId,
  // Passed through, if specified.
  appendPromoCodeToHook = [],
  appendBehaviorToHook = [],
  appendDemographicToHook = [],
}) => ({
  clientKey: omedaConfig.clientKey,
  brandKey: omedaConfig.brandKey,
  appId: omedaConfig.appId,
  inputId: omedaConfig.inputId,
  rapidIdentProductId,
  idxConfig,

  /**
   * Behavior config is now mandatory and can be generated by the CLI.
   * @see https://github.com/parameter1/identity-x-omeda-cli
   *  */
  behaviors: {
    logIn: 103,
    verifyEmail: 104,
    submitProfile: 105,
  },
  behaviorAttributes: {
    website: {
      id: 8,
      valueId: websiteBehaviorAttributeId,
    },
    actionSource: {
      id: 11,
      valueIds: {
        default: 199623,
        newsletterSignup: 199625,
        comments: 199626,
        contentGate: 199620,
      },
    },
    newsletterSignupType: {
      id: 9,
      valueIds: {
        default: 199617,
        pushdown: 199616,
        inlineContent: 199621,
        inlineSection: 199619,
        footer: 199615,
      },
    },
    contentGateType: {
      id: 10,
      valueIds: {
        default: 199618,
        metered: 199622,
        printPreview: 199624,
      },
    },
  },
  appendPromoCodeToHook,
  appendBehaviorToHook,
  appendDemographicToHook,
  onLoginLinkSentFormatter: (async ({ req, payload }) => {
    const omeda = req.app.locals.site.getAsObject('omeda');
    const { source } = req.body;
    const { onLoginLinkSentPromoCodes } = omeda;
    const { default: defaultPromoCode } = onLoginLinkSentPromoCodes.default;
    const sourcePromoCode = onLoginLinkSentPromoCodes[source];
    // if neither are set skip and retun the payload
    if (!sourcePromoCode && !defaultPromoCode) return payload;

    const val = sourcePromoCode || defaultPromoCode;
    const options = { maxAge: 60 * 60 * 24 * 365, httpOnly: false };
    req.res.cookie('omeda_promo_code', val, options);
    return {
      ...payload,
      promoCode: val,
    };
  }),
});
