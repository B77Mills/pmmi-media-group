import { getAsObject } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import latestIssueFragment from "../../graphql/fragments/latest-issue";
import issueArchiveListFragment from "../../graphql/fragments/issue-archive";

$ const blockName = "magazine-publication-card-block";
$ const requiresCoverImage = defaultValue(input.requiresCoverImage, true);

<div class=blockName>
  <if(input.header)>
    <div class=`${blockName}__header`>
      <${input.header} block-name=blockName />
    </div>
  </if>

  <div class=`${blockName}__body`>
    <div class="row">
      <marko-web-query|{ node: issue }| name="magazine-issue" params={ id: input.issueId, queryFragment: latestIssueFragment, requiresCoverImage }>
        <div class="col-md-5 mb-block">
          <theme-magazine-latest-issue-block ...getAsObject(input, "latestIssue") node=issue />
        </div>
      </marko-web-query>
      <marko-web-query|{ nodes: issues }| name="magazine-active-issues" params={ publicationId: input.publicationId, excludeIssueIds: [input.issueId], queryFragment: issueArchiveListFragment, limit: 12, requiresCoverImage }>
        <div class="col-md-7 mb-block">
          <div class="row">
            <for|issue| of=issues>
              <div class="col-3 mb-block">
                <theme-magazine-archived-issue-block ...getAsObject(input, "archivedIssue") node=issue />
              </div>
            </for>
          </div>
        </div>
      </marko-web-query>
    </div>
  </div>
</div>
