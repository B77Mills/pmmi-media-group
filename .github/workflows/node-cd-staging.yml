# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CD (Staging)

on: workflow_dispatch

env:
  RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
  RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
  RANCHER_URL: ${{ secrets.RANCHER_URL }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_ORG: parameter1
  ENVIRONMENT: staging

jobs:
  vars:
    runs-on: ubuntu-latest
    steps:
    - id: tag_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - id: repo_name
      run: echo ::set-output name=NAME::${GITHUB_REPOSITORY}
    outputs:
      name: ${{ steps.repo_name.outputs.NAME }}
      version: ${{ steps.tag_version.outputs.VERSION }}

  notify-started:
    runs-on: ubuntu-latest
    needs: vars
    steps:
    - run: npx @parameter1/base-cms-website-deployment-tool notify-started
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}

  aw:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy automationworld.com staging-websites-tauron

  hcp:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy healthcarepackaging.com staging-websites-tauron

  oem:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy oemmagazine.org staging-websites-tauron

  pw:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy packworld.com staging-websites-tauron

  pfw:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy profoodworld.com staging-websites-tauron

  cobot:
    needs: [vars, notify-started]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
      run: npx @parameter1/base-cms-website-deployment-tool deploy cobotspot.packworld.com staging-websites-tauron


  notify-finished:
    runs-on: ubuntu-latest
    # Include all jobs to ensure this runs last.
    needs: [vars, aw, hcp, oem, pw, pfw, cobot]
    steps:
    - run: npx @parameter1/base-cms-website-deployment-tool notify-finished
      env:
        TRAVIS_TAG: ${{ needs.vars.outputs.version }}
        TRAVIS_REPO_SLUG: ${{ needs.vars.outputs.name }}
