import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";
import latestIssueFragment from "../graphql/fragments/magazine-latest-issue";
import GAM from "../../config/gam";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-leaderboard":   GAM.getAdUnit({ name: "leaderboard", aliases }),
        "gpt-ad-home-top-below-head":   GAM.getAdUnit({ name: "home-top-below-head", aliases }),
        "gpt-ad-home-01-right": GAM.getAdUnit({ name: "home-01-right", aliases }),
        "gpt-ad-imu_1": GAM.getAdUnit({ name: "imu_1", aliases }),
        "gpt-ad-home-leaders-vote-btn": GAM.getAdUnit({ name: "home-leaders-vote-btn", aliases }),
        "gpt-ad-home-02-right": GAM.getAdUnit({ name: "home-02-right", aliases }),
        "gpt-ad-home-03-right": GAM.getAdUnit({ name: "home-03-right", aliases }),
      }
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-gam-display-ad id="gpt-ad-leaderboard" modifiers=["top-of-page"] />
    <marko-web-gam-display-ad id="gpt-ad-home-top-below-head" modifiers=["top-of-page"] />

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: id, optionName: "Pinned", limit: 5, requiresImage: true, queryFragment }
    >
      <website-content-hero-flow nodes=nodes />
    </marko-web-query>

  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 14, skip: 5, requiresImage: true }
        max-pages=0
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
  <@foot>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
    </marko-web-resolve-page>
  </@foot>
</marko-web-website-section-page-layout>
