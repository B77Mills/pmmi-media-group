import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";
import latestIssueFragment from "../graphql/fragments/magazine-latest-issue";
import GAM from "../../config/gam";

$ const { site } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        "gpt-ad-home-skyscraper": GAM.getAdUnit({ name: "skyscraper", aliases, size: [300, 600] }),
        "gpt-ad-home-skyscraper-2": GAM.getAdUnit({ name: "skyscraper-2", aliases, size: [300, 600] }),
      };
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@page>

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: id, optionName: "Pinned", limit: 2, requiresImage: true, queryFragment }
    >
      <website-content-hero-feed nodes=nodes />
    </marko-web-query>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="website-optioned-content"
          params={ sectionAlias: "home", optionName: "Pinned", limit: 4, skip: 1, requiresImage: true, queryFragment }
        >
          <default-theme-card-deck-flow cols=2 nodes=nodes>
            <@slot|{ node, index }|>
              <website-content-card-node
                image-width=340
                node=node
              />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gam-display-ad id="gpt-ad-home-skyscraper" modifiers=["in-card"] />
      </div>
    </div>

    <div class="row">
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "case-studies", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/case-studies">Case Studies</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "products", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/products">Products</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "ur-plus", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/ur-plus">UR+</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="website-optioned-content"
          params={ sectionId: id, optionName: "Pinned", limit: 4, skip: 5, requiresImage: true, queryFragment }
        >
          <default-theme-card-deck-flow cols=2 nodes=nodes>
            <@slot|{ node, index }|>
              <website-content-card-node
                image-width=340
                node=node
              />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gam-display-ad id="gpt-ad-section-skyscraper-2" modifiers=["in-card"] />
      </div>
    </div>

  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 12, skip: 9, requiresImage: true }
        max-pages=0
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-website-section-page-layout>
