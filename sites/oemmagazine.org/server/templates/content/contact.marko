import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import { getAsObject, get, getAsArray } from "@base-cms/object-path";
import queryFragment from "../../graphql/fragments/content-list";
import GAM from "../../../config/gam";

$ const { site } = out.global;
$ const { id, type, pageNode } = data;

<marko-web-content-page-layout id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      $ const adSlots = {
        "gpt-ad-leaderboard": GAM.getAdUnit({ name: "leaderboard", aliases }),
        "gpt-ad-imu1": GAM.getAdUnit({ name: "imu1", aliases, size: [300, 250]}),
        "gpt-ad-skyscraper": GAM.getAdUnit({ name: "skyscraper", aliases, size: [300, 600] }),
      };
      <marko-web-gam-slots slots=adSlots />
      <common-gam-content-targeting obj=content />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-gam-display-ad id="gpt-ad-leaderboard" modifiers=["above-container"] />
    <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="article-top-below-head" modifiers=["above-container"] />
  </@above-container>
  <@page>

    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>
      $ const section = resolved.getAsObject("primarySection");
      $ const aliases = hierarchyAliases(content.primarySection);
      <marko-web-page-wrapper>
        <@section>
          <div class="row">
            <div class="col">
              <default-theme-website-section-breadcrumbs section=content.primarySection />
              <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
              <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
            </div>
          </div>
        </@section>
        <@section>
          <div class="row">
            <default-theme-page-contents|{ blockName }| class="col mb-3 mb-lg-0">
              <marko-web-page-image width=300 fluid=false obj=content.primaryImage />
              <default-theme-content-contact-details obj=content />
              <marko-web-content-body block-name=blockName obj=content />
              <marko-web-content-sidebars block-name=blockName obj=content />
            </default-theme-page-contents>
          </div>

        </@section>
      </marko-web-page-wrapper>

      <div class="row mt-4">
        <div class="col-lg-8">
          <marko-web-query|{ nodes }|
            name="all-author-content"
            params={
              contactId: content.id,
              limit: 4,
              queryFragment,
              withSite: false,
            }
          >
            <default-theme-card-deck-flow cols=2 nodes=nodes>
              <@slot|{ node, index }|>
                <website-content-card-node
                  image-width=340
                  node=node
                />
              </@slot>
            </default-theme-card-deck-flow>
          </marko-web-query>
        </div>
        <div class="col-lg-4 page-rail">
          <marko-web-gam-display-ad id="gpt-ad-skyscraper" modifiers=["in-card"] />
        </div>
      </div>

    </marko-web-resolve-page>
  </@page>
  <@below-page>
    <marko-web-resolve-page|{ resolved, data: content }| node=pageNode>
      $ const section = resolved.getAsObject("primarySection");
      $ const aliases = hierarchyAliases(section);
      <website-content-load-more-block
        id=id
        type=type
        name=content.name
        aliases=aliases
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-content-page-layout>
