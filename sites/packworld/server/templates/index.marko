import hierarchyAliases from "@base-cms/marko-web/utils/hierarchy-aliases";
import queryFragment from "../graphql/fragments/content-list";
import latestIssueFragment from "../graphql/fragments/magazine-latest-issue";
import GAM from "../../config/gam";
import nxConfig from "../../config/native-x";

$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
          "gpt-ad-lb1":   GAM.getAdUnit({ name: "lb1", aliases }),
          "gpt-ad-rail2": GAM.getAdUnit({ name: "rail2", aliases }),
        }
       <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["top-of-page"] />

    <marko-web-query|{ nodes }|
      name="website-optioned-content"
      params={ sectionId: id, optionName: "Pinned", limit: 5, requiresImage: true, queryFragment }
    >
      <website-content-hero-flow nodes=nodes />
    </marko-web-query>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="website-optioned-content"
          params={ sectionAlias: "home", optionName: "Pinned", limit: 2, skip: 5, requiresImage: true, queryFragment }
        >
          <default-theme-card-deck-flow cols=2 nodes=nodes>
            <@slot|{ node, index }|>
              <website-content-card-node
                image-width=340
                node=node
              />
            </@slot>
          </default-theme-card-deck-flow>
        </marko-web-query>

        <div class="row">
          <div class="col-lg-6 mb-block">
            <marko-web-query|{ nodes }|
              name="website-optioned-content"
              params={ sectionAlias: "home", optionName: "Pinned", limit: 1, skip: 7, requiresImage: true, queryFragment }
            >
              <website-content-card-node
                image-width=340
                node=nodes[0]
              />
            </marko-web-query>
          </div>
          <div class="col-lg-6 mb-block">
            <marko-web-query|{ nodes }|
              name="website-optioned-content"
              params={
                sectionAlias: "home",
                optionName: "Pinned",
                limit: 1,
                skip: 3,
                requiresImage: true,
                queryFragment
              }
            >
              <marko-web-native-x-render|{ node: nxNode, linkAttrs, containerAttrs }|
                name="syndicated-content"
                section-name="Sponsored"
                when=true
                node=nodes[0]
                config=nxConfig
              >
                <website-content-card-node
                  image-width=340
                  node=nxNode
                  attrs=containerAttrs
                  link-attrs=linkAttrs
                />
              </marko-web-native-x-render>
            </marko-web-query>
          </div>
        </div>
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gam-display-ad id="gpt-ad-home-skyscraper" modifiers=["in-card"] />
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8 mb-block">
        <leaders-block-index
          section-alias="leaders"
          logo-src="https://base.imgix.net/files/base/pmmi/all/leaders/pw.png"
          logo-alt="Leaders in Packaging"
          body-text="Browse these leading suppliers:"
        />
      </div>
      <div class="col-lg-4 mb-block page-rail">
        <marko-web-gam-display-ad id="gpt-ad-rail2" />
      </div>
    </div>

    <div class="row">
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "machinery", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/machinery">Machinery</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "design", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/design">Design</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
      <div class="col-lg-4 mb-block">
        <marko-web-query|{ nodes }|
          name="website-scheduled-content"
          params={ sectionAlias: "issues", limit: 4, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              <marko-web-link href="/issues">Issues</marko-web-link>
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-4 mb-block page-rail">
        <div class="ad-container ad-container--in-card">
          <div id="home-04-tall-left" />
        </div>
      </div>
      <div class="col-lg-8 mb-block">
        <marko-web-query|{ nodes }|
          name="all-published-content"
          params={ contentTypes: ["Video"], limit: 5, queryFragment }
        >
          <website-content-list-flow nodes=nodes>
            <@header>
              Video
            </@header>
          </website-content-list-flow>
        </marko-web-query>
      </div>
    </div>

  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 14, skip: 5 }
        max-pages=0
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
  <@foot>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
    </marko-web-resolve-page>
  </@foot>
</marko-web-website-section-page-layout>
